spring.application.name=backend

# MySQL Database Configuration
# Required environment variables:
# - MYSQL_URL (default: jdbc:mysql://localhost:3307/unimart)
# - MYSQL_USER (required, no default)
# - MYSQL_PASSWORD (required, no default)
spring.datasource.url=${MYSQL_URL:jdbc:mysql://localhost:3307/unimart}
spring.datasource.username=${MYSQL_USER}
spring.datasource.password=${MYSQL_PASSWORD}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.open-in-view=false

# Email Configuration
# Required environment variables:
# - MAIL_HOST (required, no default)
# - MAIL_PORT (required, no default)
# - MAIL_USERNAME (required, no default)
# - MAIL_PASSWORD (required, no default)
spring.mail.host=${MAIL_HOST}
spring.mail.port=${MAIL_PORT}
spring.mail.username=${MAIL_USERNAME}
spring.mail.password=${MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# CORS Configuration
cors.allowed-origins=${CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:3001}

# Server Configuration
server.port=${SERVER_PORT:8081}

# HOW TO USE THIS FILE:
# 1. Copy this file to application.properties
# 2. Set up environment variables with your actual values
# 3. For local development, you can use:
#    - IDE run configuration environment variables
#    - Environment variables in your system
#    - A .env file with spring-dotenv library 